#!/bin/bash
set +e

#Script que mostra el certificat digital passat per paràmetre per pantalla (i també amb el keytool l'exporta a un fitxer)
#Nota: també s'empra el keytool perquè en alguns casos l'openssl NO mostra tota la informació d'un certificat


#Si debug no està definida, la definim
if [ -z $DEBUG ]; then DEBUG=0; fi
if [ "$DEBUG" -ge 3 ]; then
    # trace output
    set -x
fi

extensioCert=$(echo "$1" | rev | cut -d. -f 1|rev)

esPEM=$(grep -q "BEGIN CERTIFICATE" "$1" && echo "SI")
case  $extensioCert  in
                "pfx"|"p12")       
                    #Si es de tipus PFX hem de demanar password
     		    #read -p "Password del certificat:" -r passCert
		    openssl pkcs12 -in "$1" -out /tmp/cert.pem -nodes
		    openssl x509 -text -in /tmp/cert.pem	
		    ;;
                "cer"|"pem"|"crt"|*)
                    if [ "$esPEM" != "SI" ];then
		        certPem=$(openssl x509 -in "$1" -inform der -outform pem)
                        if [ $? -eq 0 ];then
		           	openssl x509 -inform DER -text -in "$1"  | zenity --text-info --title="$1" --width=1024 --height=1024 &
		            else
			        openssl x509 -text -in "$1" | zenity --text-info --title="$1" --width=1024 --height=1024 &
		            fi
                    else
                        openssl x509 -text -in "$1" | zenity --text-info --title="$1" --width=1024 --height=1024 &
                    fi
                        
                    if [ "$(which keytool)" != "" ];then
                        keytool -printcert -v -file "$1" > /tmp/printed_cert_"$(basename $1)"
                        echo "Nota: També s'ha exportat mitjançant keytool a /tmp/printed_cert_$(basename $1)"
                        echo "Per veurer-lo, executar: zenity --text-info --title="$1" --width=1024 --height=1024 --filename=/tmp/printed_cert_"$(basename $1)" "
                    fi
                    ;;
esac 


