#!/bin/sh

# Script que donat un fitxer zip demana la mida màxima en que es vol generar fitxers
# zip més petits (split)

#Si debug no està definida, la definim
if [ -z $DEBUG ]; then DEBUG=0; fi

# Initialize our own variables:
output_file=""


show_caib_dividir_zip_help () {
cat << EOF
   Ús: ${0##*/} [-v] [-f FITXER] [-m MIDA_MAX (en KB)]
   Aquest script fa trossos en format ZIP del fitxer ZIP passat.
      -h          mostra aquesta ajuda
      -f FITXER   fitxer zip a trocejar
      -m MIDA_MAX mida màxima de cada troç (per defecte 500kb)
      -v          mode verbose
EOF
}

#Fi funcions


# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
output_file=""

midaMaxFitxerKb=500
while getopts "hv?f:m:" opt; do
    case "$opt" in
    h|\?)
        show_caib_dividir_zip_help
        exit 0
        ;;
    v)  DEBUG=$(($DEBUG + 1))
        ;;
    f)  fitxer="$OPTARG"
        ;;
    m)  midaMaxFitxerKb="$OPTARG"
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

if [ -z "$fitxer" ] || [ -z "$midaMaxFitxerKb" ] 
then
#Si NO tenim fitxer no podem seguir endavant
    echo "ERROR: Se necessita usuari i contrassenya per poder crear les impressores" >&2
    show_caib_conf_impressores_help
    exit 1
fi

#Si debug no està definida, la definim
if [ -z $DEBUG ]; then DEBUG=0; fi
if [ "$DEBUG" -ge 3 ]; then
    # trace output
    set -x
fi

if [ "$DEBUG" -gt "0" ];then
        echo "DEBUG=$DEBUG, fitxer='$fitxer', resta parametres no emprats: $@"
fi


zip -9 -y -r -s $midaMaxFitxerKb"k"  $fitxer --out $fitxer"_trocejat.zip"
